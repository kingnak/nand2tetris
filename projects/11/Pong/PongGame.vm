// class PongGame
// static PongGame instance (static 0)
// field Bat bat (this 0)
// field Ball ball (this 1)
// field int wall (this 2)
// field boolean exit (this 3)
// field int score (this 4)
// field int lastWall (this 5)
// field int batWidth (this 6)


// constructor PongGame new
function PongGame.new 0
push constant 7
call Memory.alloc 1
pop pointer 0

// do Screen.clearScreen( );
call Screen.clearScreen 0
pop temp 0

// let batWidth = 50;
push constant 50
pop this 6

// let bat = Bat.new( 230,229,batWidth,7 );
push constant 230
push constant 229
push this 6
push constant 7
call Bat.new 4
pop this 0

// let ball = Ball.new( 253,222,0,511,0,229 );
push constant 253
push constant 222
push constant 0
push constant 511
push constant 0
push constant 229
call Ball.new 6
pop this 1

// do ball.setDestination( 400,0 );
push this 1
push constant 400
push constant 0
call Ball.setDestination 3
pop temp 0

// do Screen.drawRectangle( 0,238,511,240 );
push constant 0
push constant 238
push constant 511
push constant 240
call Screen.drawRectangle 4
pop temp 0

// do Output.moveCursor( 22,0 );
push constant 22
push constant 0
call Output.moveCursor 2
pop temp 0

// do Output.printString( "Score: 0" );
push constant 8
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
call Output.printString 1
pop temp 0

// let exit = false;
push constant 0
pop this 3

// let score = 0;
push constant 0
pop this 4

// let wall = 0;
push constant 0
pop this 2

// let lastWall = 0;
push constant 0
pop this 5

// return this;
push pointer 0
return
// End of constructor new


// method void dispose
function PongGame.dispose 0
push argument 0
pop pointer 0

// do bat.dispose( );
push this 0
call Bat.dispose 1
pop temp 0

// do ball.dispose( );
push this 1
call Ball.dispose 1
pop temp 0

// do Memory.deAlloc( this );
push pointer 0
call Memory.deAlloc 1
pop temp 0

// return ;
push constant 0
return
// End of method dispose


// function void newInstance
function PongGame.newInstance 0

// let instance = PongGame.new( );
call PongGame.new 0
pop static 0

// return ;
push constant 0
return
// End of function newInstance


// function PongGame getInstance
function PongGame.getInstance 0

// return instance;
push static 0
return
// End of function getInstance


// method void run
// var char key (local 0)
function PongGame.run 1
push argument 0
pop pointer 0

// while (~exit) {
label $LABEL_0_Start
push this 3
not
not
if-goto $LABEL_0_End

// while ((key = 0) & (~exit)) {
label $LABEL_1_Start
push local 0
push constant 0
eq
push this 3
not
and
not
if-goto $LABEL_1_End

// let key = Keyboard.keyPressed( );
call Keyboard.keyPressed 0
pop local 0

// do bat.move( );
push this 0
call Bat.move 1
pop temp 0

// do .moveBall( );
push pointer 0
call PongGame.moveBall 1
pop temp 0

// do Sys.wait( 50 );
push constant 50
call Sys.wait 1
pop temp 0
// }
// end while
goto $LABEL_1_Start
label $LABEL_1_End

// if (key = 130) {
push local 0
push constant 130
eq
not
if-goto $LABEL_2_False

// do bat.setDirection( 1 );
push this 0
push constant 1
call Bat.setDirection 2
pop temp 0
// } else { 
goto $LABEL_2_End
label $LABEL_2_False

// if (key = 132) {
push local 0
push constant 132
eq
not
if-goto $LABEL_3_False

// do bat.setDirection( 2 );
push this 0
push constant 2
call Bat.setDirection 2
pop temp 0
// } else { 
goto $LABEL_3_End
label $LABEL_3_False

// if (key = 140) {
push local 0
push constant 140
eq
not
if-goto $LABEL_4_False

// let exit = true;
push constant 1
pop this 3
label $LABEL_4_False
// }
// end if
label $LABEL_4_End
// }
// end if
label $LABEL_3_End
// }
// end if
label $LABEL_2_End

// while ((~(key = 0)) & (~exit)) {
label $LABEL_5_Start
push local 0
push constant 0
eq
not
push this 3
not
and
not
if-goto $LABEL_5_End

// let key = Keyboard.keyPressed( );
call Keyboard.keyPressed 0
pop local 0

// do bat.move( );
push this 0
call Bat.move 1
pop temp 0

// do .moveBall( );
push pointer 0
call PongGame.moveBall 1
pop temp 0

// do Sys.wait( 50 );
push constant 50
call Sys.wait 1
pop temp 0
// }
// end while
goto $LABEL_5_Start
label $LABEL_5_End
// }
// end while
goto $LABEL_0_Start
label $LABEL_0_End

// if (exit) {
push this 3
not
if-goto $LABEL_6_False

// do Output.moveCursor( 10,27 );
push constant 10
push constant 27
call Output.moveCursor 2
pop temp 0

// do Output.printString( "Game Over" );
push constant 9
call String.new 1
push constant 71
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
call Output.printString 1
pop temp 0
label $LABEL_6_False
// }
// end if
label $LABEL_6_End

// return ;
push constant 0
return
// End of method run


// method void moveBall
// var int bouncingDirection (local 0)
// var int batLeft (local 1)
// var int batRight (local 2)
// var int ballLeft (local 3)
// var int ballRight (local 4)
function PongGame.moveBall 5
push argument 0
pop pointer 0

// let wall = ball.move( );
push this 1
call Ball.move 1
pop this 2

// if ((wall > 0) & (~(wall = lastWall))) {
push this 2
push constant 0
gt
push this 2
push this 5
eq
not
and
not
if-goto $LABEL_7_False

// let lastWall = wall;
push this 2
pop this 5

// let bouncingDirection = 0;
push constant 0
pop local 0

// let batLeft = bat.getLeft( );
push this 0
call Bat.getLeft 1
pop local 1

// let batRight = bat.getRight( );
push this 0
call Bat.getRight 1
pop local 2

// let ballLeft = ball.getLeft( );
push this 1
call Ball.getLeft 1
pop local 3

// let ballRight = ball.getRight( );
push this 1
call Ball.getRight 1
pop local 4

// if (wall = 4) {
push this 2
push constant 4
eq
not
if-goto $LABEL_8_False

// let exit = (batLeft > ballRight) | (batRight < ballLeft);
push local 1
push local 4
gt
push local 2
push local 3
lt
or
pop this 3

// if (~exit) {
push this 3
not
not
if-goto $LABEL_9_False

// if (ballRight < (batLeft + 10)) {
push local 4
push local 1
push constant 10
add
lt
not
if-goto $LABEL_10_False

// let bouncingDirection = -1;
push constant 1
neg
pop local 0
// } else { 
goto $LABEL_10_End
label $LABEL_10_False

// if (ballLeft > (batRight - 10)) {
push local 3
push local 2
push constant 10
sub
gt
not
if-goto $LABEL_11_False

// let bouncingDirection = 1;
push constant 1
pop local 0
label $LABEL_11_False
// }
// end if
label $LABEL_11_End
// }
// end if
label $LABEL_10_End

// let batWidth = batWidth - 2;
push this 6
push constant 2
sub
pop this 6

// do bat.setWidth( batWidth );
push this 0
push this 6
call Bat.setWidth 2
pop temp 0

// let score = score + 1;
push this 4
push constant 1
add
pop this 4

// do Output.moveCursor( 22,7 );
push constant 22
push constant 7
call Output.moveCursor 2
pop temp 0

// do Output.printInt( score );
push this 4
call Output.printInt 1
pop temp 0
label $LABEL_9_False
// }
// end if
label $LABEL_9_End
label $LABEL_8_False
// }
// end if
label $LABEL_8_End

// do ball.bounce( bouncingDirection );
push this 1
push local 0
call Ball.bounce 2
pop temp 0
label $LABEL_7_False
// }
// end if
label $LABEL_7_End

// return ;
push constant 0
return
// End of method moveBall
// end class PongGame
